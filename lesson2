LESSER OF TWO EVENS: Write a function that returns the lesser of two given numbers if both numbers are even, but returns the greater if one or both numbers are odd
lesser_of_two_evens(2,4) --> 2
lesser_of_two_evens(2,5) --> 5

def myfunc(a,b):
    if a%2 == 0 and b%2 == 0:
        return min(a,b)
    else:
        return max (a,b)
        
ANIMAL CRACKERS: Write a function takes a two-word string and returns True if both words begin with same letter
animal_crackers('Levelheaded Llama') --> True
animal_crackers('Crazy Kangaroo') --> False

def myfunc(word):
    neword = word.lower().split()

    if neword[0][0]== neword[1][0]:
        result = True
    else:
        result = False
    return result
 
MAKES TWENTY: Given two integers, return True if the sum of the integers is 20 or if one of the integers is 20. If not, return False
makes_twenty(20,10) --> True
makes_twenty(12,8) --> True
makes_twenty(2,3) --> False

def myfunc(a,b):
    if  a+b == 20:
        return True
    elif a == 20:
        return True
    elif b == 20:
        return True
    else:
        return False

OLD MACDONALD: Write a function that capitalizes the first and fourth letters of a name
old_macdonald('macdonald') --> MacDonald

def myfunc(word):
    firstletter = word[0].upper()
    between = word[1:3]
    fourthletter = word[3].upper()
    therest = word[4:]
    return firstletter + between + fourthletter + therest
    
MASTER YODA: Given a sentence, return a sentence with the words reversed
master_yoda('I am home') --> 'home am I'
master_yoda('We are ready') --> 'ready are We'

def myfunc(word):
    newword = word.split()
    newlist= newword[::-1]
    return ' '.join (newlist)
    

FIND 33:
Given a list of ints, return True if the array contains a 3 next to a 3 somewhere.
has_33([1, 3, 3]) → True
has_33([1, 3, 1, 3]) → False
has_33([3, 1, 3]) → False

def myfunc(num):
    for i in range (0,len(num)-1):
        if num[i]==3 and num[i+1]==3:
            return True
        
    return False

PAPER DOLL: Given a string, return a string where for every character in the original there are three characters
paper_doll('Hello') --> 'HHHeeellllllooo'
paper_doll('Mississippi') --> 'MMMiiissssssiiippppppiii'

def myfunc(word):
    result =''
    for i in word:
        result += i *3
        
    return result
    


        
